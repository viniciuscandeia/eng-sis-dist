name: CI/CD Pipeline Flask

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"
      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          pip install flask
      - name: Run unit tests
        run: |
          source venv/bin/activate
          python test_app.py

  deploy:
    needs: build # Garante que o job 'deploy' só rode se o 'build' (testes) passar
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Test Environment (Simulated)
        run: |
          echo "Simulando deploy para ambiente de teste..."
          echo "Aplicação Flask iniciada em ambiente de teste (simulado)"
          # Aqui, em um cenário real, você faria o deploy para um ambiente de teste real
          # Por exemplo, usando ferramentas de deploy em servidores de teste
          # No nosso exemplo, vamos apenas exibir mensagens para simular o deploy
          echo "----------------------------------------"
          echo "Ambiente de Teste:"
          echo "http://localhost:5001 (Simulado)"
          echo "----------------------------------------"
          # Você poderia adicionar comandos para iniciar a aplicação Flask em um ambiente de teste simulado
          # usando um processo de background, por exemplo, se quisesse testar ainda mais
          # Mas para este exemplo, vamos simplificar com mensagens.

      - name: Deploy to Production Environment (Simulated)
        run: |
          echo "Simulando deploy para ambiente de produção..."
          echo "Aplicação Flask implantada em ambiente de produção (simulado)"
          # Aqui, em um cenário real, você faria o deploy para o ambiente de produção
          # Usando ferramentas de deploy e estratégias de deploy (blue/green, canary, etc.)
          # No nosso exemplo, vamos apenas exibir mensagens para simular o deploy
          echo "----------------------------------------"
          echo "Ambiente de Produção:"
          echo "http://localhost:5000 (Simulado)" # Usamos porta 5000 novamente para simplificar
          echo "----------------------------------------"
          # Novamente, você poderia adicionar comandos para iniciar a aplicação em produção
          # em um processo de background se quisesse simular mais detalhadamente.